openapi: 3.0.0
info:
    version: '0.0.2'
    title: 'cavoke'
servers:
    - url: 'localhost:8080'
paths:
    /health:
        get:
            summary: 'Simple health check'
            operationId: health
            responses:
                '200':
                    description: 'OK'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: OK
                            
    /games/list:
        get:
            summary: 'List available games to play'
            operationId: listGames
            tags:
            - game
            responses:
                '200':
                    description: 'List of available games as metadata'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/GameInfo"
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /games/{game_id}/get_config:
        get:
            summary: 'Get GameInfo of specific game'
            operationId: configGame
            tags:
                - game
            parameters:
              - in: path
                name: game_id
                schema:
                    $ref: '#/components/schemas/GameId'
                required: true
                description: 'String id of the game to get'
            responses:
                '200':
                    description: 'Config of an existing game'
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GameInfo"
                '404':
                    description: 'No such game'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /games/{game_id}/get_client:
        get:
            summary: 'Download QML client zip of a game'
            operationId: downloadClient
            tags:
                - game
            parameters:
              - in: path
                name: game_id
                schema:
                    $ref: '#/components/schemas/GameId'
                required: true
                description: 'String id of the game to get'
                example: 'tictactoe'
            responses:
                '200':
                    description: 'Client zip file of an existing game'
                    content:
                        application/octet-stream:
                            schema:
                                type: string
                                format: binary
                '404':
                    description: 'No such game'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

components:
  schemas:
    GameId:
      type: string
    GameInfo:
      type: object
      required:
        - id
        - display_name
        - description
        - players_num
      properties:
        id:
          $ref: '#/components/schemas/GameId'
        display_name:
          type: string
        description:
          type: string
        players_num:
          type: integer
          format: int32
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
# security:
#  - BasicAuth: []