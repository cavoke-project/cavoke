name: Deploy and Bundle Client
on: workflow_call
jobs:
  bundle-client-unix:
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache Qt
        id: cache-qt-unix
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ env.QT_CACHE_ITERATION }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt-unix.outputs.cache-hit }}
          tools: 'tools_ifw,4.3.0-0-202202240617,qt.tools.ifw.43'  # todo don't specify raw version...
          modules: 'qtnetworkauth'
      - name: Install AppImage
        if: runner.os == 'Linux'
        run: |
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
          wget -q https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage
          sudo install linuxdeploy-x86_64.AppImage /usr/local/bin/
          sudo install linuxdeploy-plugin-qt-x86_64.AppImage /usr/local/bin/
          sudo install linuxdeploy-plugin-appimage-x86_64.AppImage /usr/local/bin/
      - name: Install KArchive (Unix)
        run: |
          mkdir build-zlib
          cmake -B build-zlib ./third_party/zlib
          sudo cmake --build build-zlib --target install
          mkdir build-ECM
          cmake -B build-ECM ./third_party/extra-cmake-modules
          sudo cmake --build build-ECM --target install
          mkdir build-karchive
          cmake -B build-karchive ./third_party/karchive
          sudo cmake --build build-karchive --target install
      - name: Cmake
        run: |
          mkdir build && cmake -B build . -DBUILD_ALL=OFF -DBUILD_CLIENT=ON -DQT_MAJOR_VERSION=5 -DCPACK_IFW_ROOT="${IQTA_TOOLS}/QtInstallerFramework/4.3"
          cmake --build build --target bundle -DCPACK_IFW_ROOT="${IQTA_TOOLS}/QtInstallerFramework/4.3"
      - uses: actions/upload-artifact@v3
        with:
          name: cavoke_client-installer-${{ runner.os }}
          path: build/cavoke_client-*
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
      fail-fast: false
  bundle-client-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache Qt
        id: cache-qt-windows
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ env.QT_CACHE_ITERATION }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt-windows.outputs.cache-hit }}
          tools: 'tools_ifw,4.3.0-0-202202240617,qt.tools.ifw.43'  # todo don't specify raw version...
          modules: 'qtnetworkauth'
      - name: Install KArchive (Windows)
        run: |
          mkdir build-zlib
          cmake -B build-zlib ./third_party/zlib
          cmake --build build-zlib --target install
          mkdir build-ECM
          cmake -B build-ECM ./third_party/extra-cmake-modules
          cmake --build build-ECM --target install
          mkdir build-karchive
          cmake -B build-karchive ./third_party/karchive
          cmake --build build-karchive --target install
          mkdir build
          cmake -B build . -DBUILD_ALL=OFF -DBUILD_CLIENT=ON -DQT_MAJOR_VERSION=5 -DKF5Archive_DIR="C:/Program Files (x86)/ECM/lib/cmake/KF5Archive" -DCPACK_IFW_ROOT="${IQTA_TOOLS}/QtInstallerFramework/4.3"
          cmake --build build --config Release
          cmake --build build --target bundle --config Release
      - uses: actions/upload-artifact@v3
        with:
          name: cavoke_client-installer-${{ runner.os }}
          path: build/cavoke_client-*
env:
  QT_CACHE_ITERATION: 1
